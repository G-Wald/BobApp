# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'front'
    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'front/package-lock.json'
    - run: npm install
      working-directory: 'front'
    - run: npm run testCI
      working-directory: 'front'

    - name: Run Karma Tests with Coverage
      run: npm run test -- --code-coverage --no-watch --source-map=false --browsers=ChromeHeadless
      working-directory: 'front'

  sonarqube:
      needs: build-test
      runs-on: ubuntu-latest
      steps:
      - name: Analyze with SonarQube
      
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the sonarcloud scanner
          args:
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey=G-Wald_BobApp
            -Dsonar.organization=g-wald
            -Dsonar.sources=Bobapp/front
            #-Dsonar.projectBaseDir=Bobapp/front
            # Comma-separated paths to directories containing main source files.
            # When you need the analysis to take place in a directory other than the one from which it was launched
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false

      
  docker-image-publish:
    needs: build-test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Build  Docker image
      run: docker build -t waldh69/bobapp-project:bobapp-front -f front/Dockerfile .
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Publish Docker image
      run: docker push waldh69/bobapp-project:bobapp-front
